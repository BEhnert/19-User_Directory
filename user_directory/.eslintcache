[{"C:\\users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\index.js":"1","C:\\users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\App.jsx":"2","C:\\users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\reportWebVitals.js":"3","C:\\Users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\index.js":"4","C:\\Users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\App.jsx":"5","C:\\Users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\reportWebVitals.js":"6"},{"size":504,"mtime":1608344184948,"results":"7","hashOfConfig":"8"},{"size":2358,"mtime":1608506526436,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":504,"mtime":1608344184948,"results":"11","hashOfConfig":"12"},{"size":2387,"mtime":1611526522787,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1xcrdz7",{"filePath":"18","messages":"19","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tgchx0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\index.js",[],["30","31"],"C:\\users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\App.jsx",["32"],"C:\\users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\reportWebVitals.js",[],"C:\\Users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\index.js",[],["33","34"],"C:\\Users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\App.jsx",["35","36","37"],"import './App.css';\nimport {useEffect, useState} from 'react';\n\nfunction App() {\n\nconst [employees, setEmployees] = useState([]);\nconst [inputs, setInputs] = useState({});\nconst [filteredEmployees, setFilteredEmployees] = useState([]);\n\nuseEffect(() => {\n  fetch('https://randomuser.me/api/?results=50&inc=picture,name,phone,email,dob')\n  .then(response => response.json())\n  .then(data => {\n    console.log(data.results)\n    setEmployees(data.results)\n    setFilteredEmployees(data.results)\n  })\n}, [])\n\nconst handleInputs = (event) => {\n  const {name,value} = event.target;\n  var filteredEmployees = (employees.filter(\n  (each => each.name.first.includes(value) || \n  (each.name.last.includes(value)) || \n  (each.phone.includes(value)) || \n  (each.email.includes(value)) ||\n  (each.dob.date.includes(value)))))\nconsole.log(filteredEmployees);\nsetFilteredEmployees(filteredEmployees);\n\n}\n\n// const handleSortName = (event) => {\n//   const {name,value} = event.target;\n//   var sorteddEmployees = (employees.sort((\n//     (each => each.name.first), (each => each.name.first)) => ))\n//   console.log(sorteddEmployees)\n//   // var sortedEmployees = employees.sort((a, b) => a.name.first.localeCompare(b.name.first))\n  \n\n  // }\n\n  return (\n    <>\n    <header>\n    <h1>Employee Directory</h1>\n    <h5>Click on carrots to sort by heading or use Search box to narrow your results</h5>\n    </header>\n\n    <input name=\"searchTerm\" onChange={handleInputs} placeholder=\"Search\"></input>\n    <div className=\"employees-grid\">\n    <div>\n        Image\n          </div>\n          <div>\n          Name \n          {/* <div name= \"sortName\" className=\"arrow-down\" onClick={handleSortName}></div> */}\n          </div>\n          <div>\n         Phone\n          </div>\n          <div>\n         Email\n          </div>\n          <div>\n          DOB\n          </div>\n\n    </div>\n    {filteredEmployees.map((each,index) => {\n      return(\n        \n        <div key={index} className=\"employees-grid\">\n          <div>\n          <img src={each.picture.thumbnail} alt={index}/>\n          </div>\n          <div>\n          {each.name.first} {each.name.last}\n          </div>\n          <div>\n          {each.phone}\n          </div>\n          <div>\n          {each.email}\n          </div>\n          <div>\n          {each.dob.date}\n          </div>\n        </div>\n      )\n    })\n    }\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\behne\\Documents\\Projects\\Bootcamp\\GitHub\\19-User_Directory\\user_directory\\src\\reportWebVitals.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":null,"fatal":true,"severity":2,"message":"42","line":36,"column":6},{"ruleId":"38","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":7,"column":16,"nodeType":"47","messageId":"48","endLine":7,"endColumn":25},{"ruleId":"45","severity":1,"message":"50","line":21,"column":10,"nodeType":"47","messageId":"48","endLine":21,"endColumn":14},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"Parsing error: Invalid parenthesized assignment pattern\n\n\u001b[0m \u001b[90m 34 | \u001b[39m  \u001b[36mconst\u001b[39m {name\u001b[33m,\u001b[39mvalue} \u001b[33m=\u001b[39m event\u001b[33m.\u001b[39mtarget\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 35 | \u001b[39m  \u001b[36mvar\u001b[39m sorteddEmployees \u001b[33m=\u001b[39m (employees\u001b[33m.\u001b[39msort((\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 36 | \u001b[39m    (each \u001b[33m=>\u001b[39m each\u001b[33m.\u001b[39mname\u001b[33m.\u001b[39mfirst)\u001b[33m,\u001b[39m (each \u001b[33m=>\u001b[39m each\u001b[33m.\u001b[39mname\u001b[33m.\u001b[39mfirst)) \u001b[33m=>\u001b[39m ))\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 37 | \u001b[39m  console\u001b[33m.\u001b[39mlog(sorteddEmployees)\u001b[0m\n\u001b[0m \u001b[90m 38 | \u001b[39m  \u001b[90m// var sortedEmployees = employees.sort((a, b) => a.name.first.localeCompare(b.name.first))\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 39 | \u001b[39m  \u001b[0m",["51"],["52"],"no-unused-vars","'inputs' is assigned a value but never used.","Identifier","unusedVar","'setInputs' is assigned a value but never used.","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]